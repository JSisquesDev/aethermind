apiVersion: v1
kind: Namespace
metadata:
  name: web-apps
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mi-aplicacion
  namespace: web-apps
spec:
  replicas: 3
  selector:
    matchLabels:
      app: mi-aplicacion
  template:
    metadata:
      labels:
        app: mi-aplicacion
    spec:
      containers:
        - name: mi-aplicacion
          image: ghcr.io/tu-usuario/tu-repositorio:latest
          ports:
            - containerPort: 80
          env:
            - name: NODE_ENV
              value: production
          resources:
            limits:
              cpu: '500m'
              memory: '512Mi'
            requests:
              cpu: '250m'
              memory: '256Mi'
---
apiVersion: v1
kind: Service
metadata:
  name: mi-aplicacion-service
  namespace: web-apps
spec:
  selector:
    app: mi-aplicacion
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: LoadBalancer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mi-aplicacion-ingress
  namespace: web-apps
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: 'false'
spec:
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: mi-aplicacion-service
                port:
                  number: 80
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: mi-aplicacion-hpa
  namespace: web-apps
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: mi-aplicacion
  minReplicas: 2
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: 50
